// Generated by psc version 0.9.1
"use strict";
var Data_Foldable = require("../Data.Foldable");
var Data_Map_1 = require("../Data.Map");
var Data_Map_1 = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_String = require("../Data.String");
var Data_Traversable = require("../Data.Traversable");
var Nabla_Term = require("../Nabla.Term");
var Prelude = require("../Prelude");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Γ = function (x) {
    return x;
};
var lookup = function (k) {
    return function (v) {
        var $5 = Data_String.charAt(0)(k);
        if ($5 instanceof Data_Maybe.Just && ($5.value0 >= "a" && $5.value0 <= "z")) {
            return new Data_Maybe.Just(new Nabla_Term.Var(k));
        };
        return Data_Map_1.lookup(Data_Ord.ordString)(k)(v);
    };
};
var resolve = function (v) {
    return function (v1) {
        if (v instanceof Nabla_Term.Var) {
            return lookup(v.value0)(v1);
        };
        if (v instanceof Nabla_Term.App) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Nabla_Term.App.create)(resolve(v.value0)(v1)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Function.flip(resolve)(v1))(v.value1));
        };
        if (v instanceof Nabla_Term.Lam) {
            var γ$prime = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (g) {
                return function (p) {
                    return Data_Map_1.insert(Data_Ord.ordString)(p)(new Nabla_Term.Var(p))(g);
                };
            })(v1)(v.value0);
            return Data_Functor.map(Data_Maybe.functorMaybe)(Nabla_Term.Lam.create(v.value0))(resolve(v.value1)(γ$prime));
        };
        if (v instanceof Nabla_Term.Num) {
            return new Data_Maybe.Just(v);
        };
        if (v instanceof Nabla_Term.Pi) {
            return new Data_Maybe.Just(Nabla_Term.Pi.value);
        };
        if (v instanceof Nabla_Term.E) {
            return new Data_Maybe.Just(Nabla_Term.E.value);
        };
        if (v instanceof Nabla_Term.Add) {
            return new Data_Maybe.Just(Nabla_Term.Add.value);
        };
        if (v instanceof Nabla_Term.Mul) {
            return new Data_Maybe.Just(Nabla_Term.Mul.value);
        };
        if (v instanceof Nabla_Term.Pow) {
            return new Data_Maybe.Just(Nabla_Term.Pow.value);
        };
        if (v instanceof Nabla_Term.Log) {
            return new Data_Maybe.Just(Nabla_Term.Log.value);
        };
        if (v instanceof Nabla_Term.Derivative) {
            return new Data_Maybe.Just(Nabla_Term.Derivative.value);
        };
        throw new Error("Failed pattern match at Nabla.Environment line 24, column 1 - line 24, column 31: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
module.exports = {
    Γ: Γ, 
    resolve: resolve
};
